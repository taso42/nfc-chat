# Log files [OPTIONAL]
# (If omitted, the message log goes to stdout and the error log 
# goes to stderr)
log.file=log/nfc.log
error.log.file=log/nfc.error_log

# Port to listen on [REQUIRED]
listen.port=7777

# Idle timeout in minutes [REQUIRED]
# If set to zero, idle timeouts are disabled
idle.timeout=60

# Name of the commands file
commands=conf/commands.properties

# Name of the language file
messages=conf/messages.properties

# Time to keep kicked users out of channel [REQUIRED]
kick.banseconds=0

# Time to keep killed users off the server [REQUIRED]
kill.banminutes = 0

####
# Authentication policy [REQUIRED]
# Allow guests or only the users in the database?
auth.allowGuests=true
# Store guests in the database upon login? 
# This only works if jdbc.AllowGuests is true.
auth.storeGuests=false

# Authentication class [REQUIRED]
# Specified by a fully-qualified class name. 
#################################################################
# NullAuthenticator: authenticates everybody
# ignores allowGuests/storeGuests
auth.class=com.lyrisoft.chat.server.remote.persistence.auth.NullAuthenticator

# PasswdAuthenticator uses a unix-style passwd file
# (hardcoded to conf/nfc.passwd)
#auth.class=com.lyrisoft.chat.server.remote.persistence.auth.PasswdAuthenticator

# Jdbc authenticator: a generic database driven authenticator
# see contrib/jdbc.conf
#auth.class=com.lyrisoft.chat.server.remote.persistence.auth.JdbcAuthenticator

# LdapAuthenticator: an LDAP authenticator
# (does not support storeGuests.  not robustly tested.)
#auth.class=com.lyrisoft.chat.server.remote.persistence.auth.LdapAuthenticator

# Ignore storage class [REQUIRED]
# Specified by a fully-qualified class name. 
#################################################################
# NullIgnoreStorage: no-op "storage."
ignoreStore.class=com.lyrisoft.chat.server.remote.persistence.ignore.NullIgnoreStorage

# Jdbc ignore storage
#ignoreStore.class=com.lyrisoft.chat.server.remote.persistence.ignore.JdbcIgnoreStorage

# Room Authentication [REQUIRED]
# NullRoomAuthenticator: default -- all users allowed; oldest user is op
roomAuth.class=com.lyrisoft.chat.server.remote.persistence.auth.room.NullRoomAuthenticator

# JdbcRoomAuthenticator: policy determined by database on per-room basis.
# See contrib/jdbc.conf
# roomAuth.class=com.lyrisoft.chat.server.remote.persistence.auth.room.JdbcRoomAuthenticator

#
# Distributed section
#################################################################

# Enable JMS (distribute chat server network)?
jms.enabled=false

# Initial Context Factory Impl
jndi.initial=com.swiftmq.jndi.InitialContextFactoryImpl

# JMS provider URL(s) (add extra urls separated with commas)
jms.provider=smqp://localhost:4001/timeout=10000

# JMS topic
jms.topic=nfc

# JMS user and pass (optional)
#jms.user=username
#jms.pass=password

